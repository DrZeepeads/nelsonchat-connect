import fs from 'fs';
import path from 'path';

const BOOKS_DIR = path.resolve(__dirname, './books');

/**
 * Reads a specific volume's text file.
 *
 * @param volume - The name of the volume file (e.g., "volume1").
 * @returns The text content of the file.
 * @throws Error if the file does not exist.
 */
export const readVolume = (volume: string): string => {
  const filePath = path.join(BOOKS_DIR, `${volume}.txt`);
  if (!fs.existsSync(filePath)) {
    throw new Error(`Volume "${volume}" not found.`);
  }
  return fs.readFileSync(filePath, 'utf-8');
};

/**
 * Searches all volumes or a specific volume for a keyword.
 *
 * @param query - The search term or keyword.
 * @param volume - (Optional) The specific volume to search in.
 * @returns A list of matching lines with context.
 */
export const searchBooks = (query: string, volume?: string): { volume: string; line: string }[] => {
  const results: { volume: string; line: string }[] = [];
  const volumes = volume ? [volume] : fs.readdirSync(BOOKS_DIR).map((file) => path.parse(file).name);

  volumes.forEach((vol) => {
    const content = readVolume(vol);
    const lines = content.split('\n');
    lines.forEach((line, index) => {
      if (line.toLowerCase().includes(query.toLowerCase())) {
        results.push({ volume: vol, line: line.trim() });
      }
    });
  });

  return results;
};